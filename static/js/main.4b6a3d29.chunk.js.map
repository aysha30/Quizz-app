{"version":3,"sources":["components/Questionaire.js","App.js","index.js"],"names":["Questionaire","showAnswers","handleAnswer","handleNextQuestion","data","question","correct_answer","answers","className","dangerouslySetInnerHTML","__html","map","answer","textColour","onClick","App","useState","questions","setQuestions","currentIndex","setCurrentIndex","score","setScore","setShowAnswers","useEffect","fetch","then","res","json","results","incorrect_answers","sort","Math","random","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAwDeA,EArDM,SAAC,GAKb,IAJRC,EAIO,EAJPA,YACAC,EAGO,EAHPA,aACAC,EAEO,EAFPA,mBAEO,IADJC,KAAQC,EACJ,EADIA,SAAUC,EACd,EADcA,eAAgBC,EAC9B,EAD8BA,QAGpC,OACA,sBAAKC,UAAU,gBAAf,UACC,qBAAKA,UAAU,yDAAf,SAEC,oBACAA,UAAU,WACVC,wBAAyB,CAACC,OAAQL,OAInC,qBAAKG,UAAU,+BAAf,SAEGD,EAAQI,KAAI,SAACC,GAEb,IAAMC,EACNZ,EACCW,IAAWN,EACV,iBAAmB,eACnB,kBACH,OACC,wBACCE,UAAS,mBACIK,EADJ,oDAGTC,QAAS,kBAAMZ,EAAaU,IAC5BH,wBAAyB,CAACC,OAAQE,UAOrCX,GACA,wBACAa,QAASX,EACTK,UAAS,iGAFT,+BCyBWO,MA9Df,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAsCN,oBAAS,GAA/C,mBAAOf,EAAP,KAAoBsB,EAApB,KAmCA,OAjCAC,qBAAU,WACRC,MATY,mFAUXC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAtB,GACJ,IAAMa,EAAYb,EAAKyB,QAAQlB,KAAI,SAACN,GAAD,mBAAC,eAC/BA,GAD8B,IAEjCE,QAAS,CACPF,EAASC,gBADF,mBAEJD,EAASyB,oBACZC,MAAK,kBAAMC,KAAKC,SAAW,WAG/Bf,EAAaD,QAEd,IAmBIA,EAAUiB,OAAS,EACxB,qBAAK1B,UAAU,kCAAf,SACGW,GAAgBF,EAAUiB,OAEzB,qBAAI1B,UAAU,gCAAd,0BACgBa,KAGhB,cAAC,EAAD,CACAjB,KAAMa,EAAUE,GAChBlB,YAAaA,EACbC,aA5Be,SAACU,GAChBX,GACCW,IAAWK,EAAUE,GAAcb,gBACpCgB,EAASD,EAAQ,GAGrBE,GAAe,IAuBXpB,mBAlBqB,WACzBoB,GAAe,GAEfH,EAAgBD,EAAe,QAqB/B,oBAAIX,UAAU,iCAAd,yBC1DJ2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4b6a3d29.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Questionaire = ({\r\n\tshowAnswers,\r\n\thandleAnswer,\r\n\thandleNextQuestion,\r\n    data: { question, correct_answer, answers},\r\n  }) => {\r\n\t\r\n \treturn(\r\n\t\t<div className='flex flex-col'>\r\n\t\t\t<div className='bg-white text-purple-800 p-10 \r\n\t\t\t\trounded-lg shadow-md '>\r\n\t\t\t\t<h2 \r\n\t\t\t\tclassName='text 2xl' \r\n\t\t\t\tdangerouslySetInnerHTML={{__html: question}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='grid grid-cols-2 gap-6 mt-6 '>\r\n\t\t\t\t\r\n\t\t\t\t{ answers.map((answer) => \r\n\t\t\t\t{\r\n\t\t\t\t\t\tconst textColour = \r\n\t\t\t\t\t\tshowAnswers ? \r\n\t\t\t\t\t\t\tanswer === correct_answer ? \r\n\t\t\t\t\t\t\t\t'text-green-500' : 'text-red-500'\r\n\t\t\t\t\t\t: 'text-purple-700';\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\tclassName=\r\n\t\t\t\t\t\t\t{`bg-white ${textColour}\r\n\t\t\t\t\t\t\tp-4 font-semibold rounded shadow`}\r\n\t\t\t\t\t\t\tonClick={() => handleAnswer(answer)}\r\n\t\t\t\t\t\t\tdangerouslySetInnerHTML={{__html: answer}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\r\n\t\t\t</div>\r\n\t\t\t{showAnswers && (\r\n\t\t\t\t<button \r\n\t\t\t\tonClick={handleNextQuestion}\r\n\t\t\t\tclassName={`ml-auto \r\n\t\t\t\t\tbg-purple-700 text-white p-4 font-semibold \r\n\t\t\t\t\trounded shadow mt-6`}>\r\n\t\t\t\t\t\tNext Question\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Questionaire;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Questionaire } from './components';\n\nconst API_URL = 'https://opentdb.com/api.php?amount=10&category=17&difficulty=easy&type=multiple'\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showAnswers, setShowAnswers] = useState(false);\n\n  useEffect(() => {\n    fetch(API_URL)\n    .then(res => res.json())\n    .then(data => {\n      const questions = data.results.map((question) =>({\n        ...question, \n        answers: [\n          question.correct_answer,\n          ...question.incorrect_answers\n        ].sort(() => Math.random() - 0.5)\n      }))\n\n      setQuestions(questions);\n    });\n  }, []);\n\n  const handleAnswer = (answer) => {\n    if(!showAnswers){\n      if(answer === questions[currentIndex].correct_answer) { \n        setScore(score + 1);\n      }\n    }\n    setShowAnswers(true);\n    // const newIndex = currentIndex + 1\n    // setCurrentIndex(newIndex);\n  };\n\n  const handleNextQuestion = () => {\n    setShowAnswers(false);\n\n    setCurrentIndex(currentIndex + 1);\n  }\n\n  return questions.length > 0 ? (\n    <div className='container w-5/6 md:w-full p-10 '>\n      {currentIndex >= questions.length ? \n      (\n        <h1 className='text-3xl text-white font-bold'>\n          Your score : {score}\n        </h1>\n      ):(\n        <Questionaire \n        data={questions[currentIndex]} \n        showAnswers={showAnswers}\n        handleAnswer={handleAnswer}\n        handleNextQuestion={handleNextQuestion}\n\n        />\n      )}\n    </div>\n  ) : (\n    <h2 className='text 2xl text-white \n    font-bold'>Loading...</h2>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}